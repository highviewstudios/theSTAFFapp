{"version":3,"sources":["store/actions/user.js","ServerPath.jsx","components/NavBar/userNav.js","components/NavBar/Nav.js","pages/home.js","pages/signIn.js","pages/createPassword.js","pages/forgotPassword.js","pages/changePassword.js","pages/wrongOrganisation.js","pages/notConnected.js","pages/wrongLogin.js","pages/organisationAdmin.js","pages/organisationHome.js","store/actions/organistion.js","components/pages/administrator/organisationItem.js","components/pages/administrator/organisationList.js","pages/administrator/home.js","pages/administrator/signIn.jsx","pages/administrator/registerOrganisation.js","App.js","serviceWorker.js","store/reducers/userDetails.js","store/reducers/organisationDetails.js","store/reducers/index.js","index.js"],"names":["userUpdateAuth","val","type","value","userUpdateName","userUpdateRole","userUpdateNew","userUpdateRequestedPassword","userUpdateOrgID","hostPath","BuildHostPath","host","window","location","hostname","protocol","User","history","useHistory","user","useSelector","state","dispatch","useDispatch","useState","name","show","details","setDetails","logOut","Axios","get","then","res","console","log","data","message","page","role","orgID","push","catch","err","useEffect","ServerPath","auth","Dropdown","Toggle","variant","id","Button","onClick","Menu","Item","Nav","Row","Col","className","Home","document","title","Container","fluid","Jumbotron","SignIn","props","organisationID","match","params","organisation","setmessage","signInLocal","event","preventDefault","email","getElementById","password","axios","displayName","new","requestedPassword","info","signInGoogle","href","CreatePassword","required","oldPassword","newPassword","confirmPassword","post","userError","ForgotPassword","sent","setSent","Form","Control","ChangePassword","WrongOrganisation","NotConnected","WrongLogin","OrganisationAdmin","OrganisationHome","organisationId","orgTitle","setOrgTitle","url","orgUpdateSignInLocal","auth_Local","orgUpdateSignInGoogle","auth_Google","getOrgisation","OrganisationItem","Card","body","poc","OrganisationList","loaded","setLoaded","organisations","setOrganisations","map","index","key","POC_Email","POC_Name","granted","setGranted","class","OrganisationRegister","setMessage","Group","as","Label","Check","label","orgName","allocatRooms","authLocal","checked","authGoogle","pName","pEmail","orgRooms","toString","error","App","isLoaded","withCredentials","isAuth","path","exact","component","AdminHome","AdminSignIn","AdminOrgRegister","Boolean","userDetails","action","organisationDetails","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a83ee7c1.chunk.js","sourcesContent":["export const userUpdateAuth = (val) => {\n    return {\n        type: \"USER_UPDATE_AUTH\",\n        value: val\n    };\n}\n\nexport const userUpdateName = (val) => {\n    return {\n        type: \"USER_UPDATE_NAME\",\n        value: val\n    };\n}\n\nexport const userUpdateEmail = (val) => {\n    return {\n        type: \"USER_UPDATE_EMAIL\",\n        value: val\n    };\n}\n\nexport const userUpdateRole = (val) => {\n    return {\n        type: \"USER_UPDATE_ROLE\",\n        value: val\n    };\n}\n\nexport const userUpdateNew = (val) => {\n    return {\n        type: \"USER_UPDATE_NEW\",\n        value: val\n    }\n}\n\nexport const userUpdateRequestedPassword = (val) => {\n    return {\n        type: \"USER_UPDATE_REQUESTEDPASSWORD\",\n        value: val\n    }\n}\n\nexport const userUpdateOrgID = (val) => {\n    return {\n        type: \"USER_UPDATE_ORGID\",\n        value: val\n    }\n}\n\n","import React from \"react\";\n\nlet hostPath = \"\";\n\nfunction BuildHostPath() {\n    \n    const host = window.location.hostname;\n    const protocol = window.location.protocol;\n\n    if(host === \"localhost\") {\n        hostPath = protocol + \"//\" + host + \":8080\";\n    } else {\n        hostPath = protocol +\"//\" + host;\n    }  \n}\n\nexport default BuildHostPath;\nexport { hostPath };","import React, { useContext, useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole, userUpdateNew, userUpdateRequestedPassword, userUpdateOrgID} from \"../../store/actions/user\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\n\nimport Button from \"react-bootstrap/Button\";\n\nfunction User() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    \n    const [details, setDetails] = useState({\n        name: '',\n        show: false\n    });\n    \n    useEffect(() => {\n        ServerPath();\n    },[])\n\n    useEffect(() => {\n        getUser();\n    }, [user]);\n\n    function getUser() {\n\n        //console.log(user);\n        if(user.auth) {\n\n            if(user.role == \"superAdmin\") {\n                setDetails({\n                    name: \"High-View Studios\",\n                    show: true\n                });\n            } else {\n                setDetails({\n                    name: user.name,\n                    show: true\n                });\n            }\n        } else {\n            setDetails({\n                name: '',\n                show: false\n            })\n        }\n    }\n\n    function logOut() {\n        Axios.get(\"/logout\")\n        .then(res => {\n            console.log(res.data.message);\n            if(res.data.message === \"User logged out\") {\n                console.log(user);\n                let page;\n                if(user.role == 'superAdmin') {\n                    page = \"/\";\n                } else {\n                    const orgID = user.orgID;\n                    page = '/org/' + orgID + '/signIn';\n                }\n                dispatch(userUpdateAuth(false));\n                dispatch(userUpdateName(''));\n                dispatch(userUpdateRole(''));\n                dispatch(userUpdateNew(''));\n                dispatch(userUpdateRequestedPassword(false));\n                dispatch(userUpdateOrgID(''));\n                history.push(page);\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n        {/* <Button variant=\"warning\" onClick={logOut}>Log Out</Button> */}\n        {details.show ? (\n            <div>\n            <strong>User: {details.name}</strong><br />\n            {user.role == \"seniorAdmin\" ? (\n                <div>\n                <Dropdown>\n            <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                Page\n            </Dropdown.Toggle><Button variant=\"warning\" onClick={logOut}>Log Out</Button>\n\n            <Dropdown.Menu>\n                <Dropdown.Item onClick={() => history.push('/')}>Organisation Home</Dropdown.Item>\n                <Dropdown.Item onClick={() => history.push('/org/'+ user.orgID +'/organisationAdmin')}>Organisation Admin</Dropdown.Item>\n            </Dropdown.Menu>\n            </Dropdown>\n                </div>) : (\n                    <div>\n                    <Button variant=\"warning\" onClick={logOut}>Log Out</Button>\n                </div>)}\n            \n            </div>\n        ) : (\n            <div>\n            </div>\n        )}   \n        </div>\n        \n    )\n}\n\nexport default User;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport UserNav from './userNav';\n\nfunction Nav() {\n  return (\n    <nav>\n    <Row>\n    <Col></Col>\n    <Col>\n        <h1><strong>My STAFF</strong></h1>\n        <h2><strong>Space, Times, Flexible, Facilities</strong></h2>\n    </Col>\n    <Col>\n        <div className=\"user-nav\">\n          <UserNav />\n        </div>\n      </Col>\n      </Row>\n    </nav>\n  );\n}\n\nexport default Nav;","import React, { useEffect, useContext } from 'react';\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction Home() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n    onOpen();\n  },[]);\n\n  function onOpen() {\n    console.log(user);\n    if(user.auth == true) {\n      if(user.role == \"superAdmin\") {\n        history.push(\"/administrator\");\n      } else {\n        history.push('/org/' + user.orgID);\n      }\n    }\n  }\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Home</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole, userUpdateNew, userUpdateRequestedPassword, userUpdateOrgID} from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction SignIn(props) {\n\n  const organisationID = props.match.params.id;\n\n  const user = useSelector(state => state.user);\n  const organisation = useSelector(state => state.organisation);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [message, setmessage] = useState('');\n\n  useEffect(() => {\n    document.title = \"STAFF - Sign In\";\n    ServerPath();\n    //onOpen();\n  },[])\n\n  function onOpen() {\n    if(user.auth) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n      <h1>{organisation.name}</h1> <br />\n        <h3>Please Sign In!</h3>\n        {organisation.signInLocal == 'true' ? (\n          <div>\n          <form>\n          <label id=\"lblEmail\">Email:</label><br />\n          <input id=\"txtEmail\"type=\"email\"></input><br /><br />\n          <label id=\"lblPassword\">Password:</label><br />\n          <input id=\"txtPassword\" type=\"password\"></input><br /> <br />\n          <p>{message}</p>\n        </form><br />\n        \n        <Button variant=\"warning\" onClick={logIn}>Log in</Button>\n        <Button variant=\"warning\" onClick={() => history.push('/org/'+ organisationID +'/forgotPassword')}>Forgot Password</Button><br /><br />\n          </div>) : (<div></div>)}\n\n        {organisation.signInGoogle == 'true' ? (\n          <Button variant=\"danger\" href={hostPath + \"/auth/google\"}><i className=\"fab fa-google\"></i> Log in with Google</Button>\n        ) : (<div></div>)}\n        \n      </Jumbotron>\n    </Container>\n    </div>\n  );\n\n  function logIn(event) {\n    event.preventDefault();\n    const email = document.getElementById(\"txtEmail\").value;\n    const password = document.getElementById(\"txtPassword\").value;\n\n    axios.get(\"/login?email=\" + email + \"&password=\" + password)\n    .then(res => {\n      console.log(res.data);\n        const message = res.data.message;\n        if(message === \"Logged in successful\") {\n            dispatch(userUpdateAuth(true));\n            dispatch(userUpdateName(res.data.displayName));\n            dispatch(userUpdateRole(res.data.role));\n            dispatch(userUpdateNew(res.data.new));\n            dispatch(userUpdateRequestedPassword(res.data.requestedPassword));\n            dispatch(userUpdateOrgID(res.data.orgID));\n\n            if(res.data.new == \"true\") {\n              history.push('createPassword');\n            } else {\n            history.push('/org/' + organisationID);\n            }\n        } else {\n            setmessage(res.data.info);\n        }\n    })\n    .catch(err => {\n        console.log(err);\n    });\n  }\n\n  function register() {\n    history.push(\"/register\");\n  }\n}\n\nexport default SignIn;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userUpdateNew } from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction CreatePassword(props) {\n\n  const organisationID = props.match.params.id;\n\n  const history = useHistory();\n  const [message, setmessage] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n    onOpen();\n  },[]);\n\n  function onOpen() {\n    \n  }\n\n  function setPassword(event) {\n    event.preventDefault();\n\n    const oldPassword = document.getElementById('txtCurrentPassword').value;\n    const newPassword = document.getElementById('txtNewPassword').value;\n    const confirmPassword = document.getElementById('txtConfirmPassword').value;\n\n    if(oldPassword != '' && newPassword != '' && confirmPassword != '')\n    {\n      const data = { oldPassword: oldPassword, newPassword: newPassword, confirmPassword: confirmPassword};\n\n      axios.post('/createPassword', data)\n      .then(res => {\n        if(res.data.userError == 'Yes') {\n          setmessage(res.data.message);\n        } else {\n          if(res.data.message == 'Updated user first password') {\n            dispatch(userUpdateNew(res.data.user.new));\n            history.push(\"/org/\" + organisationID);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n}\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h1>Hello, and welcome to My STAFF</h1>\n        <h3>Please create a new password</h3>\n        <form>\n          <label id=\"lblCurrentPassword\">Current Password:</label><br />\n          <input id=\"txtCurrentPassword\" type=\"password\" required /><br /><br />\n          <label id=\"lblNewPassword\">New Password:</label><br />\n          <input id=\"txtNewPassword\" type=\"password\" required /><br /> <br />\n          <label id=\"lblConfirmPassword\">Confirm Password:</label><br />\n          <input id=\"txtConfirmPassword\" type=\"password\" required /><br /> <br />\n          <p>{message}</p>\n          <Button type='submit' variant=\"warning\" onClick={setPassword}>Set Password</Button><br /><br />\n        </form><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default CreatePassword;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userUpdateNew } from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { Form } from 'react-bootstrap';\n\nfunction ForgotPassword(props) {\n\n  const organisationID = props.match.params.id;\n\n  const history = useHistory();\n  const [message, setmessage] = useState('');\n  const [sent, setSent] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[]);\n\n  function requestPassword(event) {\n    event.preventDefault();\n\n    const email = document.getElementById('txtEmail').value;\n\n    if(email != '')\n    {\n      const data = {email : email};\n      axios.post('/requestPassword/', data)\n      .then(res => {\n        if(res.data.userError == \"Yes\") {\n          setmessage(res.data.message);\n        } else {\n          setSent(true);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n}\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h1>Forgot your password?</h1>\n        {sent ? (\n          <div>\n          <h3>Your new password has been requested, please check your email</h3>\n          <Button variant=\"warning\" onClick={() => history.push('/org/' + organisationID + '/signIn')}>Back to Sign In</Button><br /><br />\n          </div>\n        ) : (\n          <div>\n            <h3>Please enter your email below:</h3><br/>\n            <form>\n              <Form.Control id=\"txtEmail\" type=\"email\" required /><br /> <br />\n              <p>{message}</p>\n              <Button type='submit' variant=\"warning\" onClick={requestPassword}>Request New Password</Button><br /><br />\n            </form><br />\n          </div>\n            )}\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userUpdateRequestedPassword } from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction ChangePassword(props) {\n\n  const organisationID = props.match.params.id;\n\n  const history = useHistory();\n  const [message, setmessage] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[]);\n\n  function setPassword(event) {\n    event.preventDefault();\n\n    const oldPassword = document.getElementById('txtCurrentPassword').value;\n    const newPassword = document.getElementById('txtNewPassword').value;\n    const confirmPassword = document.getElementById('txtConfirmPassword').value;\n\n    if(oldPassword != '' && newPassword != '' && confirmPassword != '')\n    {\n      const data = { oldPassword: oldPassword, newPassword: newPassword, confirmPassword: confirmPassword};\n      axios.post('/changePassword', data)\n      .then(res => {\n        if(res.data.userError == 'Yes') {\n          setmessage(res.data.message);\n        } else {\n          if(res.data.message == 'Updated user password') {\n            dispatch(userUpdateRequestedPassword(res.data.user.requestedPassword));\n            history.push(\"/org/\" + organisationID);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n}\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h1>Please create a new password</h1>\n        <form>\n          <label id=\"lblCurrentPassword\">Current Password:</label><br />\n          <input id=\"txtCurrentPassword\" type=\"password\" required /><br /><br />\n          <label id=\"lblNewPassword\">New Password:</label><br />\n          <input id=\"txtNewPassword\" type=\"password\" required /><br /> <br />\n          <label id=\"lblConfirmPassword\">Confirm Password:</label><br />\n          <input id=\"txtConfirmPassword\" type=\"password\" required /><br /> <br />\n          <p>{message}</p>\n          <Button type='submit' variant=\"warning\" onClick={setPassword}>Set Password</Button><br /><br />\n        </form><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default ChangePassword;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { useSelector} from 'react-redux';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction WrongOrganisation(props) {\n\n  const organisationID = props.match.params.id;\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Not Connected\";\n  },[])\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>Sorry, this is not your organisation</h3><br /> <br />\n        <Button variant=\"warning\" onClick={() => history.push('/org/' + organisationID)}>Back to my organisation</Button><br /><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default WrongOrganisation;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { useSelector} from 'react-redux';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction NotConnected() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Not Connected\";\n    ServerPath();\n    onOpen();\n  },[])\n\n  function onOpen() {\n    if(user.auth) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>Email is not connected to any organisation</h3>\n        <Button variant=\"warning\" onClick={() => history.push('/')}>Back to Home</Button><br /><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default NotConnected;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { useSelector} from 'react-redux';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction WrongLogin(props) {\n\n  const organisationID = props.match.params.id;\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Not Connected\";\n    ServerPath();\n  },[])\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>This is not the login method you use to log in</h3>\n        <Button variant=\"warning\" onClick={() => history.push('/org/'+ organisationID +'/')}>Back</Button><br /><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default WrongLogin;\n","import React, { useEffect, useContext } from 'react';\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction OrganisationAdmin() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Organisation Admin</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default OrganisationAdmin;","import React, { useEffect, useContext, useState } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { orgUpdateName, orgUpdateSignInLocal, orgUpdateSignInGoogle } from \"../store/actions/organistion\";\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction OrganisationHome(props) {\n  \n  const organisationId = props.match.params.id;\n\n  const user = useSelector(state => state.user);\n  const [orgTitle, setOrgTitle] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n    getOrgisation();\n  },[]);\n\n  function getOrgisation() {\n\n    const url = '/organisation/' + organisationId;\n    Axios.get(url)\n    .then(res => {\n      if(res.data.userError != \"Yes\") {\n\n        dispatch(orgUpdateName(res.data.organisation.name));\n        dispatch(orgUpdateSignInLocal(res.data.organisation.auth_Local));\n        dispatch(orgUpdateSignInGoogle(res.data.organisation.auth_Google));\n        \n        if(user.auth == false) {\n          history.push('/org/' + organisationId + '/signIn');\n        } else {\n          if(user.orgID != organisationId) {\n            history.push('/org/'+ user.orgID +'/wrongOrganisation');\n          } else if (user.requestedPassword == 'true') {\n            history.push('/org/'+ organisationId +'/changePassword');\n          } else if(user.new == 'true') {\n            history.push('/org/' + organisationId +'/createPassword');\n          } else {\n            console.log(res.data.organisation);\n            setOrgTitle(res.data.organisation.name);\n          }\n        }\n      } else {\n        history.push('/');\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Organisation Home</h1>\n              <h3>{orgTitle}</h3>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default OrganisationHome;","export const orgUpdateName = (val) => {\n    return {\n        type: \"ORG_UPDATE_NAME\",\n        value: val\n    };\n}\n\nexport const orgUpdateSignInLocal = (val) => {\n    return {\n        type: \"ORG_UPDATE_SIGNIN_LOCAL\",\n        value: val\n    };\n}\n\nexport const orgUpdateSignInGoogle = (val) => {\n    return {\n        type: \"ORG_UPDATE_SIGNIN_GOOGLE\",\n        value: val\n    };\n}","import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport { Row, Col } from 'react-bootstrap';\n\nfunction OrganisationItem(props) {\n    return (\n        <div>\n            <Card body className='Organisations-ListBox'>\n            <Row>\n                <Col>\n                    <label>{props.name}</label>\n                </Col>\n                <Col>\n                    <label>{props.email}</label>\n                </Col>\n                <Col>\n                    <label>{props.poc}</label>\n                </Col>\n                <Col>\n                    <label>{props.id}</label>\n                </Col>\n            </Row>\n            </Card>\n        </div>\n    )\n}\n\nexport default OrganisationItem;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport OrganisationItem from './organisationItem';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { Row, Col } from 'react-bootstrap';\n\nfunction OrganisationList() {\n\n    \n    const history = useHistory();\n    const [loaded, setLoaded] = useState(false);\n    const [organisations, setOrganisations] = useState([]);\n\n    useEffect(() => {\n        onOpen();\n    }, []);\n    \n    function onOpen() {\n\n        Axios.get('/organisation/all')\n        .then(res => {\n            setOrganisations(res.data);\n            setLoaded(true);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n   return (\n        <div>\n            <div className=\"AH-AddOrganisationBtn\">\n                <Button variant=\"warning\" onClick={() => history.push(\"/administrator/organisationRegister\")}>Add Organisation</Button>\n            </div>\n            <br />\n            {loaded ? (\n                <div><Card body className='Organisations-ListTitles'>\n            <Row>\n                <Col>\n                    <label>Name</label>\n                </Col>\n                <Col>\n                    <label>Email</label>\n                </Col>\n                <Col>\n                    <label>Point of Contact</label>\n                </Col>\n                <Col>\n                    <label>Unquie URL</label>\n                </Col>\n            </Row>\n            </Card>\n            <br />\n            {organisations.map((organisation, index) => {\n               return (\n                   <div key={index}>\n                        <OrganisationItem name={organisation.name} email={organisation.POC_Email} poc={organisation.POC_Name} id={organisation.url} />\n                        <br />\n                    </div>)\n            })}\n            </div>) : (<div></div>)}\n            \n        \n        </div>\n   )\n}\n\nexport default OrganisationList;","import React, { useEffect} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\n//COMPONENTS\nimport OrganisationList from '../../components/pages/administrator/organisationList';\n\nfunction Home() {\n\n  const history = useHistory();\n    const user = useSelector(state => state.user);\n\n    if(!user.auth || user.role != \"superAdmin\") {\n            history.push('/administrator/signIn');\n    }\n\n  useEffect(() => {\n    document.title = \"STAFF - Administrator\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n      <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <OrganisationList />\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignIn() {\n\n    const [granted, setGranted] = useState(true);\n    const user = useSelector(state => state.user);\n    const history = useHistory();\n\n    useEffect(() => {\n        ServerPath();\n        onOpen();\n    },[])\n\n    function onOpen() {\n        if(user.auth) {\n            if(user.role == \"superAdmin\") {\n                history.push('/');\n            } else {\n                setGranted(false);\n            }\n        }\n    }\n\n    return (\n        <div className=\"body\">\n            <Container className=\"p-3\">\n                <Jumbotron className=\"back-color\">\n                    <h1>Administrator Sign In</h1>\n                    {!granted ? (\n                    <div>\n                    <h1>Access Denied</h1>\n                    <Button variant=\"warning\" href='/'>Back to Home </Button><br /><br />\n                    </div>\n                    ):(\n                    <div>\n                    <br />\n                    <Button variant=\"dark\" href={hostPath + \"/auth/github\"}><i class=\"fab fa-github\"></i>  Log in with Github</Button><br /><br />\n                    </div> \n                    \n                    )}\n                </Jumbotron>\n            </Container>\n        </div>\n    )\n}\n\nexport default SignIn;","import React, { useEffect, useState} from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\"\n\n//COMPONENTS\nimport OrganisationList from '../../components/pages/administrator/organisationList';\nimport { Col } from 'react-bootstrap';\n\nfunction OrganisationRegister() {\n\n  const [message, setMessage] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Administrator\";\n  },[]);\n\n  function handleClick(event) {\n    event.preventDefault();\n\n    const orgName = document.getElementById(\"txtOrgName\").value;\n    const allocatRooms = document.getElementById(\"txtAlRooms\").value;\n    const authLocal = document.getElementById(\"ckbLocal\").checked;\n    const authGoogle = document.getElementById(\"ckbGoggle\").checked;\n    const pName = document.getElementById(\"txtName\").value;\n    const pEmail = document.getElementById(\"txtEmail\").value;\n\n\n    const data = {orgName: orgName, orgRooms: allocatRooms, authLocal: authLocal.toString(), authGoogle: authGoogle.toString(), pName: pName, pEmail: pEmail};\n    Axios.post('/administrator/addOrganisation', data)\n    .then(res => {\n      const data = res.data;\n\n      if(data.error != \"null\") {\n        console.log(data.message);\n      } else if(data.userError == \"Yes\") {\n          setMessage(data.message);\n      } else if (data.message == \"Successfully added\") {\n        history.push(\"/administrator\");\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    })\n\n  }\n\n  return (\n    <div className=\"body\">\n      <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n                <h1>Organisation Register</h1>\n\n                <Form className=\"A-AddOrganisationText\">\n                <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblOrgName\">Organisation Name:</Form.Label><br />\n                  <Form.Control id=\"txtOrgName\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblAlRooms\">Allocated Rooms:</Form.Label><br />\n                  <Form.Control id=\"txtAlRooms\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                  </Form.Row>\n                  <Form.Label id=\"lblAuthTypes\">Types of Authencation:</Form.Label><br />\n                  <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Check id=\"ckbLocal\" type=\"checkbox\" label=\"Local Login\" />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Check id=\"ckbGoggle\" type=\"checkbox\" label=\"Google Login\" />\n                </Form.Group>\n                  </Form.Row>\n                  <Form.Label className=\"A-AddOrganisationTextColor\" id=\"lblPOC\">Point of Contact (Senior Admin):</Form.Label><br />\n                  <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblName\">Name:</Form.Label><br />\n                  <Form.Control id=\"txtName\" type=\"text\" required />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblEmail\">Email:</Form.Label><br />\n                  <Form.Control id=\"txtEmail\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                  </Form.Row>\n                  <p>{message}</p>\n                  <Button type=\"submit\" onClick={handleClick} variant=\"warning\">Register</Button>\n                </Form>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default OrganisationRegister;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport {useDispatch} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole, userUpdateNew, userUpdateRequestedPassword, userUpdateOrgID} from './store/actions/user'\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport \"./public/styles.css\";\n\nimport Nav from \"./components/NavBar/Nav\";\n\nimport Home from \"./pages/home\";\nimport SignIn from \"./pages/signIn\";\nimport CreatePassword from \"./pages/createPassword\";\nimport ForgotPassword from \"./pages/forgotPassword\";\nimport ChangePassword from './pages/changePassword';\nimport WrongOrganisation from './pages/wrongOrganisation';\n\nimport NotConnected from \"./pages/notConnected\";\nimport WrongLogin from \"./pages/wrongLogin\";\nimport OrganisationAdmin from \"./pages/organisationAdmin\";\nimport OrganisationHome from \"./pages/organisationHome\";\n\nimport AdminHome from \"./pages/administrator/home\";\nimport AdminSignIn from \"./pages/administrator/signIn\";\nimport AdminOrgRegister from \"./pages/administrator/registerOrganisation\";\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const [isLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    onOpen();\n  },[])\n\n  function onOpen() {\n    Axios.get(\"/auth\", {withCredentials: true })\n  .then(res => {\n\n      //console.log(res.data);\n      const isAuth = res.data.auth;\n      console.log(res.data)\n      dispatch(userUpdateAuth(isAuth));\n      if(isAuth) {\n        if(res.data.role == \"superAdmin\") {\n          dispatch(userUpdateName(\"High-ViewStudios\"));\n          dispatch(userUpdateRole(\"superAdmin\"));\n        } else {\n          dispatch(userUpdateName(res.data.user.displayName));\n          dispatch(userUpdateRole(res.data.user.role));\n          dispatch(userUpdateNew(res.data.user.new));\n          dispatch(userUpdateRequestedPassword(res.data.user.requestedPassword));\n          dispatch(userUpdateOrgID(res.data.user.orgID));\n        }\n      }\n      setLoaded(true);\n  })\n  .catch(err => {\n      console.log(\"Authe\" +err);\n  })\n  }\n\n  return (\n    <div>\n    {isLoaded ? (   \n    <Router>\n      <div className=\"App\" >\n        <Nav />\n        <Switch>\n        {/* USER */}\n        <Route path=\"/\" exact component={Home} /> {/* DO NOT TOUCH */}\n        <Route path=\"/org/:id\" exact component={OrganisationHome} />\n        <Route path=\"/org/:id/signIn\" component={SignIn} /> {/* DO NOT TOUCH */}\n        <Route path=\"/org/:id/forgotPassword\" component={ForgotPassword} />\n        <Route path=\"/org/:id/changePassword\" component={ChangePassword} />\n        <Route path=\"/org/:id/createPassword\" component={CreatePassword} />\n        <Route path='/org/:id/wrongOrganisation' component={WrongOrganisation} />\n        <Route path=\"/org/:id/wrongLogin/\" component={WrongLogin} />\n        <Route path=\"/org/:id/organisationAdmin\" component={OrganisationAdmin} />\n\n        <Route path=\"/notConnected\" component={NotConnected} />\n        \n\n        {/* ADMINISTRATION */}\n        <Route path=\"/administrator\" exact component={AdminHome} /> {/* DO NOT TOUCH */}\n        <Route path=\"/administrator/signIn\" component={AdminSignIn} /> {/* DO NOT TOUCH */}\n        <Route path=\"/administrator/organisationRegister\" component={AdminOrgRegister} />\n        </Switch>\n      </div>\n    </Router>) : <div></div>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const userDetails = (state = {auth: false, name: '', email: '', role:'', new:'', requestedPassword: false, orgID: ''}, action) => {\n    switch(action.type){\n        case 'USER_UPDATE_AUTH':\n            return {...state, auth: action.value};\n        case 'USER_UPDATE_NAME':\n            return {...state, name: action.value};\n        case 'USER_UPDATE_EMAIL':\n            return {...state, email: action.value};\n        case 'USER_UPDATE_ROLE':\n            return {...state, role: action.value};\n        case 'USER_UPDATE_NEW':\n            return {...state, new: action.value};\n        case 'USER_UPDATE_REQUESTEDPASSWORD':\n            return {...state, requestedPassword: action.value}\n        case 'USER_UPDATE_ORGID':\n            return {...state, orgID: action.value}\n        default:\n            return state\n    }\n}\n\nexport default userDetails;","const organisationDetails = (state = {name: '', signInLocal: false, signInGoogle: false}, action) => {\n    switch(action.type){\n        case 'ORG_UPDATE_NAME':\n            return {...state, name: action.value};\n        case 'ORG_UPDATE_SIGNIN_LOCAL':\n            return {...state, signInLocal: action.value};\n        case 'ORG_UPDATE_SIGNIN_GOOGLE':\n            return {...state, signInGoogle: action.value};\n        default:\n            return state\n    }\n}\n\nexport default organisationDetails;","import userDetails from './userDetails';\nimport organisationDetails from './organisationDetails';\nimport {combineReducers} from 'redux'\n\nconst rootReducer = combineReducers({\n    user: userDetails,\n    organisation: organisationDetails\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers';\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}