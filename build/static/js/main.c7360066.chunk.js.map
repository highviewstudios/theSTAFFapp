{"version":3,"sources":["context/userContext.js","context/adminContext.js","ServerPath.jsx","components/userNav.js","components/Nav.js","pages/auth.jsx","pages/home.js","pages/signIn.js","pages/register.jsx","pages/administrator/auth.js","pages/administrator/home.js","pages/administrator/signin.jsx","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","name","email","user","setUser","Provider","value","updateUser","field","prevValue","children","AdminContext","AdminContextProvider","access","admin","updateAdmin","prevVal","hostPath","BuildHostPath","host","window","location","hostname","protocol","User","history","useHistory","useContext","show","details","setDetails","page","setPage","logOut","Axios","get","then","res","console","log","data","message","catch","err","useEffect","getUser","push","Button","variant","onClick","Nav","Row","Col","className","Auth","withCredentials","auth","displayName","Home","document","title","Container","fluid","Jumbotron","SignIn","setmessage","ServerPath","id","type","event","preventDefault","getElementById","password","axios","info","href","class","Register","setMessage","registed","setRegister","size","required","url","userError","granted","App","path","exact","component","AdminAuth","AdminHome","AdminSignIn","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"qNAEaA,EAAcC,0BAwBZC,MAtBf,SAA6BC,GAAQ,IAAD,EAEVC,mBAAS,CAC3BC,KAAM,GACNC,MAAO,KAJqB,mBAE3BC,EAF2B,KAErBC,EAFqB,KAehC,OACI,kBAACR,EAAYS,SAAb,CAAsBC,MAAO,CAACH,OAAMI,WATxC,SAAoBC,EAAOF,GACvBF,GAAQ,SAACK,GACL,OAAO,2BAAIA,GAAX,kBAAuBD,EAAQF,UAQ9BP,EAAMW,WCnBNC,EAAed,0BAsBbe,MApBf,SAA8Bb,GAAQ,IAAD,EAERC,mBAAS,CAC9BC,KAAM,GACNY,OAAQ,KAJqB,mBAE1BC,EAF0B,KAEnBV,EAFmB,KAajC,OACI,kBAACO,EAAaN,SAAd,CAAuBC,MAAO,CAACQ,QAAOC,YAP1C,SAAqBP,EAAOF,GACxBF,GAAQ,SAACY,GACL,OAAO,2BAAIA,GAAX,kBAAqBR,EAAQF,UAM5BP,EAAMW,WCjBfO,EAAW,GAcAC,MAZf,WAEI,IAAMC,EAAOC,OAAOC,SAASC,SACvBC,EAAWH,OAAOC,SAASE,SAG7BN,EADQ,cAATE,EACYI,EAAW,KAAOJ,EAAO,QAEzBI,EAAU,KAAOJ,G,gCCyErBK,MA1Ef,WAEI,IAAMC,EAAUC,cAFJ,EAIiBC,qBAAW/B,GAAhCO,EAJI,EAIJA,KACAW,GALI,EAIEP,WACIoB,qBAAWhB,GAArBG,OALI,EAOkBd,mBAAS,CACnCC,KAAM,GACN2B,MAAM,IATE,mBAOLC,EAPK,KAOIC,EAPJ,OAWY9B,qBAXZ,mBAWL+B,EAXK,KAWCC,EAXD,KAyCZ,SAASC,IACLC,IAAMC,IAAI,WACTC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,KAAKC,SACG,oBAArBJ,EAAIG,KAAKC,UACRX,EAAW,CAAC7B,KAAM,GAAI2B,MAAM,IAC5BI,EAAQ,KACRM,QAAQC,IAAI,gBAInBG,OAAM,SAAAC,GACHL,QAAQC,IAAII,MAIpB,OA5CAC,qBAAU,YASV,WACIN,QAAQC,IAAI,MACZD,QAAQC,IAAIzB,GACK,KAAdX,EAAKF,KACJ6B,EAAW,CACP7B,KAAME,EAAKF,KACX2B,MAAM,IAGU,YAAjBd,EAAMD,QACLiB,EAAW,CACP7B,KAAM,oBACN2B,MAAM,IAIlBU,QAAQC,IAAIpC,GAxBZ0C,KACD,CAAC1C,EAAMW,IAEV8B,qBAAU,WACNnB,EAAQqB,KAAKf,KAEf,CAACE,IAsCC,6BAECJ,EAAQD,KACL,6BACA,yCAAeC,EAAQ5B,MAAc,6BACrC,kBAAC8C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAShB,GAAnC,YAGA,gCCtDGiB,MAnBf,WACE,OACE,6BACA,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACI,4BAAI,6CACJ,4BAAI,wEAER,kBAACA,EAAA,EAAD,KACI,yBAAKC,UAAU,YACb,kBAAC,EAAD,WCkCKC,MA5Cf,WAEI,IAAM7B,EAAUC,cACVnB,EAAeoB,qBAAW/B,GAA1BW,WAHM,EAKYP,qBALZ,mBAKL+B,EALK,KAKCC,EALD,KAsCZ,OA/BAY,qBAAU,WAUNV,IAAMC,IAAI,QAAS,CAACoB,iBAAiB,IACpCnB,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,EAAIG,MACDH,EAAIG,KAAKgB,MAGpBjD,EAAW,OAAQ8B,EAAIG,KAAKrC,KAAKsD,aACjCzB,EAAQ,UAGTA,EAAQ,cAGdU,OAAM,SAAAC,GACHL,QAAQC,IAAI,aAAeI,QAvBjC,IAEFC,qBAAU,WACNnB,EAAQqB,KAAKf,KACf,CAACA,IA0BC,+B,gBCjBO2B,MAnBf,WAQE,OANuB/B,qBAAW/B,GAA1BW,WAERqC,qBAAU,WACRe,SAASC,MAAQ,UACjB,IAGA,yBAAKP,UAAU,QACX,kBAACQ,EAAA,EAAD,CAAWC,OAAK,EAACT,UAAU,OACvB,kBAACU,EAAA,EAAD,CAAWV,UAAU,cACnB,wC,MC8CCW,MAvDf,WAEE,IAAMvC,EAAUC,cAFA,EAGc1B,mBAAS,IAHvB,mBAGTyC,EAHS,KAGAwB,EAHA,KAUhB,OALArB,qBAAU,WACRe,SAASC,MAAQ,kBACjBM,MACA,IAGA,yBAAKb,UAAU,QACf,kBAACQ,EAAA,EAAD,CAAWR,UAAU,OACnB,kBAACU,EAAA,EAAD,CAAWV,UAAU,cACnB,+CACA,8BACE,2BAAOc,GAAG,YAAV,UAAmC,6BACnC,2BAAOA,GAAG,WAAUC,KAAK,UAAgB,6BAAM,6BAC/C,2BAAOD,GAAG,eAAV,aAAyC,6BACzC,2BAAOA,GAAG,cAAcC,KAAK,aAC7B,2BAAI3B,IACC,6BAEP,kBAACM,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAQhC,SAAeoB,GACbA,EAAMC,iBACN,IAAMpE,EAAQyD,SAASY,eAAe,YAAYjE,MAC5CkE,EAAWb,SAASY,eAAe,eAAejE,MAExDmE,IAAMtC,IAAI,gBAAkBjC,EAAQ,aAAesE,GAClDpC,MAAK,SAAAC,GAEa,yBADCA,EAAIG,KAAKC,QAErBhB,EAAQqB,KAAK,KAEbmB,EAAW5B,EAAIG,KAAKkC,SAG3BhC,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAvBZ,UACA,kBAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA0BhC,WACExB,EAAQqB,KAAK,eA3BT,YAA8D,6BAAM,6BACpE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAAS2B,KAAM1D,EAAW,gBAAgB,uBAAG2D,MAAM,kBAAnE,uBAAmH,6BAAM,iCCoDlHC,MA9Ef,WAEIjC,qBAAU,WACNe,SAASC,MAAQ,qBACnB,IAEF,IAAMnC,EAAUC,cANA,EAQc1B,mBAAS,IARvB,mBAQTyC,EARS,KAQAqC,EARA,OASgB9E,oBAAS,GATzB,mBAST+E,EATS,KASCC,EATD,KAyChB,OACI,yBAAK3B,UAAU,QACf,kBAACQ,EAAA,EAAD,CAAWR,UAAU,OACjB,kBAACU,EAAA,EAAD,CAAWV,UAAU,cACrB,yBAAKA,UAAU,UACX,wCACC0B,EACG,6BACA,sEAA+C,6BAC/C,4CACA,kBAAChC,EAAA,EAAD,CAAQqB,KAAK,SAASnB,QAhBtC,WACI+B,GAAY,GACZvD,EAAQqB,KAAK,YAc2CE,QAAQ,WAApD,UAGA,8BACA,2BAAOmB,GAAG,WAAV,SAAiC,6BACjC,2BAAOA,GAAG,OAAOc,KAAK,KAAKb,KAAK,OAAOc,UAAQ,IAAE,6BACjD,6BACA,2BAAOf,GAAG,YAAV,UAAmC,6BACnC,2BAAOA,GAAG,QAAQc,KAAK,KAAKb,KAAK,QAAQc,UAAQ,IAAE,6BACnD,6BACA,2BAAOf,GAAG,eAAV,aAAyC,6BACzC,2BAAOA,GAAG,WAAWc,KAAK,KAAKb,KAAK,WAAWc,UAAQ,IAAE,6BACzD,6BACA,2BAAOf,GAAG,kBAAV,qBAAoD,6BACpD,2BAAOA,GAAG,kBAAkBc,KAAK,KAAKb,KAAK,WAAWc,UAAQ,IAAG,6BACjE,6BACA,2BAAIzC,GACJ,kBAACM,EAAA,EAAD,CAAQqB,KAAK,SAASnB,QAzDtC,SAAqBoB,GACjBA,EAAMC,iBACNQ,EAAW,IACX,IAKMK,EAAM,aALCxB,SAASY,eAAe,QAAQjE,MAKb,IAJlBqD,SAASY,eAAe,SAASjE,MAIH,IAH3BqD,SAASY,eAAe,YAAYjE,MAGM,IAFnCqD,SAASY,eAAe,mBAAmBjE,MAGnEmE,IAAMtC,IAAIgD,GACT/C,MAAK,SAAAC,GACsB,iCAArBA,EAAIG,KAAKC,QACRuC,GAAY,GAEc,QAAvB3C,EAAIG,KAAK4C,WACRN,EAAWzC,EAAIG,KAAKC,YAI/BC,OAAM,SAAAC,GACHL,QAAQC,IAAII,OAqCwCK,QAAQ,WAApD,kBC5BLM,MA7Cf,WAEI,IAAM7B,EAAUC,cAERX,EAAgBY,qBAAWhB,GAA3BI,YAJI,EAKYf,qBALZ,mBAKL+B,EALK,KAKCC,EALD,KAuCZ,OAhCAY,qBAAU,WAUNV,IAAMC,IAAI,uBACTC,MAAK,SAAAC,GACF,IAAMG,EAAOH,EAAIG,KACdA,EAAKgB,MAEJzC,EAAY,SAAUyB,EAAK3B,QAET,WAAf2B,EAAK3B,OACJmB,EAAQ,uBAERA,EAAQ,0BAGZA,EAAQ,4BAGfU,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAzBjB,IAEHC,qBAAU,WACNnB,EAAQqB,KAAKf,KACf,CAACA,IA2BC,+BCnBO2B,MAjBf,WAME,OAJAd,qBAAU,WACRe,SAASC,MAAQ,0BACjB,IAGA,yBAAKP,UAAU,QACb,kBAACQ,EAAA,EAAD,CAAWC,OAAK,EAACT,UAAU,OACrB,kBAACU,EAAA,EAAD,CAAWV,UAAU,cACnB,sDCwBCW,MAhCf,WAAmB,IAEPlD,EAAUa,qBAAWhB,GAArBG,MAOR,OALA8B,qBAAU,WACNe,SAASC,MAAQ,gCACjBM,MACF,IAGE,yBAAKb,UAAU,QACX,kBAACQ,EAAA,EAAD,CAAWR,UAAU,OACjB,kBAACU,EAAA,EAAD,CAAWV,UAAU,cACjB,qDACkB,UAAjBvC,EAAMuE,QACP,6BACA,6CACA,kBAACtC,EAAA,EAAD,CAAQC,QAAQ,UAAU2B,KAAO1D,EAAW,yBAA5C,YAGA,6BACA,6BACA,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,OAAO2B,KAAM1D,EAAW,gBAAgB,uBAAG2D,MAAM,kBAAjE,wBAAkH,6BAAM,kC,QCY7HU,MAvBf,WACE,OACE,kBAAC,EAAD,KACA,kBAAC,EAAD,KACA,kBAAC,IAAD,KACE,yBAAKjC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOkC,KAAK,IAAIC,OAAK,EAACC,UAAWnC,IACjC,kBAAC,IAAD,CAAOiC,KAAK,QAAQE,UAAW/B,IAC/B,kBAAC,IAAD,CAAO6B,KAAK,UAAUE,UAAWzB,IACjC,kBAAC,IAAD,CAAOuB,KAAK,YAAYE,UAAWZ,IACnC,kBAAC,IAAD,CAAOU,KAAK,iBAAiBC,OAAK,EAACC,UAAWC,IAC9C,kBAAC,IAAD,CAAOH,KAAK,sBAAsBE,UAAWE,IAC7C,kBAAC,IAAD,CAAOJ,KAAK,wBAAwBE,UAAWG,UCxBnCC,QACW,cAA7BzE,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASwE,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtC,SAASY,eAAe,SDyHpB,kBAAmB2B,WACrBA,UAAUC,cAAcC,MACrBhE,MAAK,SAAAiE,GACJA,EAAaC,gBAEd5D,OAAM,SAAA6D,GACLjE,QAAQiE,MAAMA,EAAM9D,a","file":"static/js/main.c7360066.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const UserContext = createContext();\n\nfunction UserContextProvider(props) {\n\n    let [user, setUser] = useState({\n        name: '',\n        email: ''\n    });\n\n    function updateUser(field, value) {\n        setUser((prevValue) => {\n            return {...prevValue, [field]: value}\n    })\n\n        \n    }\n\n    return (\n        <UserContext.Provider value={{user, updateUser}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContextProvider;","import React, { createContext, useState } from 'react';\n\nexport const AdminContext = createContext();\n\nfunction AdminContextProvider(props) {\n\n    const [admin, setUser] = useState({\n        name: '',\n        access: ''\n    })\n\n    function updateAdmin(field, value) {\n        setUser((prevVal) => {\n            return {...prevVal, [field]: value}\n        })\n    }\n\n    return (\n        <AdminContext.Provider value={{admin, updateAdmin}}>\n            {props.children}\n        </AdminContext.Provider>\n    );\n}\n\nexport default AdminContextProvider;","import React from \"react\";\n\nlet hostPath = \"\";\n\nfunction BuildHostPath() {\n    \n    const host = window.location.hostname;\n    const protocol = window.location.protocol;\n\n    if(host === \"localhost\") {\n        hostPath = protocol + \"//\" + host + \":8080\";\n    } else {\n        hostPath = protocol +\"//\" + host;\n    }  \n}\n\nexport default BuildHostPath;\nexport { hostPath };","import React, { useContext, useState, useEffect } from 'react';\nimport { UserContext } from '../context/userContext';\nimport { AdminContext } from '../context/adminContext';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from \"react-bootstrap/Button\";\n\n\n\nfunction User() {\n\n    const history = useHistory();\n\n    const { user, updateUser } = useContext(UserContext);\n    const { admin } = useContext(AdminContext);\n    \n    const [details, setDetails] = useState({\n        name: '',\n        show: false\n    });\n    const [page, setPage] = useState();\n\n    useEffect(() => {\n        getUser();\n    }, [user, admin]);\n\n    useEffect(() => {\n        history.push(page);\n        //setPage('');\n    },[logOut])\n\n    function getUser() {\n        console.log(\"IN\");\n        console.log(admin);\n        if(user.name !== '') {\n            setDetails({\n                name: user.name,\n                show: true\n            });\n        } else {\n            if(admin.access === 'granted') {\n                setDetails({\n                    name: \"High-View-Studios\",\n                    show: true\n                })\n            }\n        }\n        console.log(user);\n    }\n\n    function logOut() {\n        Axios.get(\"/logout\")\n        .then(res => {\n            console.log(res.data.message);\n            if(res.data.message === \"User logged out\") {\n                setDetails({name: '', show: false});\n                setPage('/');\n                console.log(\"Redirect\")\n            }\n\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n        {/* <Button variant=\"warning\" onClick={logOut}>Log Out</Button> */}\n        {details.show ? (\n            <div>\n            <strong>User: {details.name}</strong><br />\n            <Button variant=\"warning\" onClick={logOut}>Log Out</Button>\n            </div>\n        ) : (\n            <div>\n            </div>\n        )}   \n        </div>\n        \n    )\n}\n\nexport default User;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport UserNav from './userNav';\n\nfunction Nav() {\n  return (\n    <nav>\n    <Row>\n    <Col></Col>\n    <Col>\n        <h1><strong>My STAFF</strong></h1>\n        <h2><strong>Space, Times, Flexible, Facilities</strong></h2>\n    </Col>\n    <Col>\n        <div className=\"user-nav\">\n          <UserNav />\n        </div>\n      </Col>\n      </Row>\n    </nav>\n  );\n}\n\nexport default Nav;","import React, { useEffect, useContext, useState } from \"react\";\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from \"../context/userContext\";\n\nfunction Auth() {\n\n    const history = useHistory();\n    let { updateUser } = useContext(UserContext)\n\n    const [page, setPage] = useState();\n\n    useEffect(() => {\n       onOpen();\n    },[])\n\n    useEffect(() => {\n        history.push(page);\n    },[page])\n\n   function onOpen() {\n\n        Axios.get(\"/auth\", {withCredentials: true })\n        .then(res => {\n\n            console.log(res.data);\n            const isAuth = res.data.auth;\n\n            if(isAuth) {\n                updateUser(\"name\", res.data.user.displayName);\n                setPage('/home');\n            }\n            else {\n               setPage('/signin');\n            }\n        })\n        .catch(err => {\n            console.log(\"Auth Err: \" + err);\n        \n        })\n    }\n        \n\n    return (\n        <div>\n        </div>\n    )\n}\n\nexport default Auth;","import React, { useEffect, useContext } from 'react';\nimport { UserContext } from '../context/userContext';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction Home() {\n\n  const { updateUser } = useContext(UserContext)\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[])\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Home</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { MDBIcon, MDBBtn } from 'mdbreact';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction SignIn() {\n\n  const history = useHistory();\n  const [message, setmessage] = useState('');\n\n  useEffect(() => {\n    document.title = \"STAFF - Sign In\";\n    ServerPath();\n  },[])\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>Please Sign In!</h3>\n        <form>\n          <label id=\"lblEmail\">Email:</label><br />\n          <input id=\"txtEmail\"type=\"email\"></input><br /><br />\n          <label id=\"lblPassword\">Password:</label><br />\n          <input id=\"txtPassword\" type=\"password\"></input>\n          <p>{message}</p>\n        </form><br />\n        \n        <Button variant=\"warning\" onClick={logIn}>Log in</Button>\n        <Button variant=\"warning\" onClick={register}>Register</Button><br /><br />\n        <Button variant=\"danger\" href={hostPath + \"/auth/google\"}><i class=\"fab fa-google\"></i> Log in with Google</Button><br /><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n\n  function logIn(event) {\n    event.preventDefault();\n    const email = document.getElementById(\"txtEmail\").value;\n    const password = document.getElementById(\"txtPassword\").value;\n\n    axios.get(\"/login?email=\" + email + \"&password=\" + password)\n    .then(res => {\n        const message = res.data.message;\n        if(message === \"Logged in successful\") {\n            history.push('/');\n        } else {\n            setmessage(res.data.info);\n        }\n    })\n    .catch(err => {\n        console.log(err);\n    });\n  }\n\n  function register() {\n    history.push(\"/register\");\n  }\n}\n\nexport default SignIn;\n","import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Register() {\n\n    useEffect(() => {\n        document.title = \"STAFF - Register\";\n    },[])\n\n    const history = useHistory();\n\n    const [message, setMessage] = useState('');\n    const [registed, setRegister] = useState(false)\n\n    function handleClick(event) {\n        event.preventDefault();\n        setMessage('');\n        const name = document.getElementById(\"name\").value;\n        const email = document.getElementById(\"email\").value;\n        const password = document.getElementById(\"password\").value;\n        const confirmpassword = document.getElementById(\"confirmpassword\").value;\n        \n        const url = \"/register/\"+ name +\"/\"+ email +\"/\"+ password +\"/\"+ confirmpassword;\n        axios.get(url)\n        .then(res => {\n            if(res.data.message === \"User registered successfully\") {\n                setRegister(true);\n            } else {\n                if(res.data.userError === \"Yes\") {\n                    setMessage(res.data.message);\n                }\n        }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    function handleLogin() {\n        setRegister(false);\n        history.push('/signin')\n    }\n\n    \n    return (\n        <div className=\"body\">\n        <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n            <div className=\"header\">\n                <h2>Register</h2>\n                {registed ? (\n                    <div>\n                    <h3> You have successfully been registered</h3><br />\n                    <p>Please log in</p>\n                    <Button type=\"submit\" onClick={handleLogin} variant=\"warning\">Login</Button>\n                    </div>\n                ) : (\n                    <form>\n                    <label id=\"lblName\">Name:</label><br />\n                    <input id=\"name\" size=\"sm\" type=\"text\" required/><br />\n                    <br />\n                    <label id=\"lblEmail\">Email:</label><br />\n                    <input id=\"email\" size=\"sm\" type=\"email\" required/><br />\n                    <br />\n                    <label id=\"lblPassword\">Password:</label><br />\n                    <input id=\"password\" size=\"sm\" type=\"password\" required/><br />\n                    <br />\n                    <label id=\"lblConPassword\">Confirm Password:</label><br />\n                    <input id=\"confirmpassword\" size=\"sm\" type=\"password\" required /><br />\n                    <br />\n                    <p>{message}</p>\n                    <Button type=\"submit\" onClick={handleClick} variant=\"warning\">Register</Button>\n                    </form> \n                )}\n            </div>\n            </Jumbotron>\n        </Container>\n        </div>\n    )\n}\n\nexport default Register;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AdminContext } from '../../context/adminContext';\nimport Axios from 'axios';\n\nfunction Auth() {\n    \n    const history = useHistory();\n\n    const { updateAdmin } = useContext(AdminContext);\n    const [page, setPage] = useState();\n\n    useEffect(() => {\n        onOpen();\n    }, []);\n    \n    useEffect(() => {\n        history.push(page);\n    },[page])\n\n    function onOpen() {\n        \n        Axios.get(\"/administrator/auth\")\n        .then(res => {\n            const data = res.data;\n            if(data.auth) {\n\n                updateAdmin(\"access\", data.access);\n\n                if(data.access == \"granted\") {\n                    setPage('/administrator/home');\n                } else {\n                    setPage('/administrator/signin');\n                }\n            } else {\n                setPage('/administrator/signin');\n            }\n        })  \n        .catch(err => {\n            console.log(err);\n        })\n    }\n    \n    \n    return (\n        <div> \n        </div>\n    )\n}\n\nexport default Auth;","import React, { useEffect} from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Home() {\n\n  useEffect(() => {\n    document.title = \"STAFF - Administrator\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n      <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Administrator Home</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useContext, useEffect } from 'react';\nimport { AdminContext } from '../../context/adminContext';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport { MDBIcon, MDBBtn } from 'mdbreact';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignIn() {\n\n    const { admin } = useContext(AdminContext);\n\n    useEffect(() => {\n        document.title = \"STAFF - Administrator Sign In\";\n        ServerPath();\n    },[])\n\n    return (\n        <div className=\"body\">\n            <Container className=\"p-3\">\n                <Jumbotron className=\"back-color\">\n                    <h1>Administrator Sign In</h1>\n                    {admin.granted == \"denied\" ? (\n                    <div>\n                    <h1>Access Denied</h1>\n                    <Button variant=\"warning\" href= {hostPath + \"/administrator/logout\"}>Log Out</Button>\n                    </div>\n                    ):(\n                    <div>\n                    <br />\n                    <Button variant=\"dark\" href={hostPath + \"/auth/github\"}><i class=\"fab fa-github\"></i>  Log in with Github</Button><br /><br />\n                    </div> \n                    \n                    )}\n                </Jumbotron>\n            </Container>\n        </div>\n    )\n}\n\nexport default SignIn;","import React from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport \"./public/styles.css\";\n\nimport Nav from \"./components/Nav\";\n\nimport Auth from \"./pages/auth\";\nimport Home from \"./pages/home\";\nimport SignIn from \"./pages/signIn\";\nimport Register from \"./pages/register\";\n\nimport AdminAuth from \"./pages/administrator/auth\";\nimport AdminHome from \"./pages/administrator/home\";\nimport AdminSignIn from \"./pages/administrator/signin\";\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport UserContextProvider from './context/userContext';\nimport AdminContextProvider from './context/adminContext';\n\nfunction App() {\n  return (\n    <UserContextProvider>\n    <AdminContextProvider>\n    <Router>\n      <div className=\"App\" >\n        <Nav />\n        <Switch>\n        <Route path=\"/\" exact component={Auth} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/administrator\" exact component={AdminAuth} />\n        <Route path=\"/administrator/home\" component={AdminHome} />\n        <Route path=\"/administrator/signin\" component={AdminSignIn} />\n        </Switch>\n      </div>\n    </Router>\n    </AdminContextProvider>\n    </UserContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}