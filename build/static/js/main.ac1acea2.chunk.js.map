{"version":3,"sources":["store/actions/user.js","ServerPath.jsx","components/NavBar/userNav.js","components/NavBar/Nav.js","pages/home.js","pages/signIn.js","pages/createPassword.js","pages/forgotPassword.js","pages/changePassword.js","pages/wrongOrganisation.js","pages/notConnected.js","pages/wrongLogin.js","pages/organisationAdmin.js","pages/organisationHome.js","store/actions/organistion.js","components/pages/administrator/organisationItem.js","components/pages/administrator/organisationList.js","pages/administrator/home.js","pages/administrator/signIn.jsx","pages/administrator/registerOrganisation.js","App.js","serviceWorker.js","store/reducers/userDetails.js","store/reducers/organisationDetails.js","store/reducers/index.js","index.js"],"names":["userUpdateAuth","val","type","value","userUpdateName","userUpdateRole","userUpdateNew","userUpdateRequestedPassword","userUpdateOrgID","hostPath","BuildHostPath","host","window","location","hostname","protocol","User","history","useHistory","user","useSelector","state","dispatch","useDispatch","useState","name","show","details","setDetails","logOut","Axios","get","then","res","console","log","data","message","orgID","push","catch","err","useEffect","ServerPath","auth","role","Dropdown","Toggle","variant","id","Button","onClick","Menu","Item","Nav","Row","Col","className","Home","document","title","Container","fluid","Jumbotron","SignIn","props","organisationID","match","params","organisation","setmessage","signInLocal","event","preventDefault","email","getElementById","password","axios","displayName","new","requestedPassword","info","signInGoogle","href","CreatePassword","required","oldPassword","newPassword","confirmPassword","url","userError","ForgotPassword","sent","setSent","Form","Control","ChangePassword","WrongOrganisation","NotConnected","WrongLogin","OrganisationAdmin","OrganisationHome","organisationId","orgTitle","setOrgTitle","orgUpdateSignInLocal","auth_Local","orgUpdateSignInGoogle","auth_Google","getOrgisation","OrganisationItem","Card","body","poc","OrganisationList","loaded","setLoaded","organisations","setOrganisations","map","index","key","POC_Email","POC_Name","granted","setGranted","class","OrganisationRegister","setMessage","Group","as","Label","Check","label","checked","error","App","isLoaded","withCredentials","isAuth","path","exact","component","AdminHome","AdminSignIn","AdminOrgRegister","Boolean","userDetails","action","organisationDetails","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac1acea2.chunk.js","sourcesContent":["export const userUpdateAuth = (val) => {\n    return {\n        type: \"USER_UPDATE_AUTH\",\n        value: val\n    };\n}\n\nexport const userUpdateName = (val) => {\n    return {\n        type: \"USER_UPDATE_NAME\",\n        value: val\n    };\n}\n\nexport const userUpdateEmail = (val) => {\n    return {\n        type: \"USER_UPDATE_EMAIL\",\n        value: val\n    };\n}\n\nexport const userUpdateRole = (val) => {\n    return {\n        type: \"USER_UPDATE_ROLE\",\n        value: val\n    };\n}\n\nexport const userUpdateNew = (val) => {\n    return {\n        type: \"USER_UPDATE_NEW\",\n        value: val\n    }\n}\n\nexport const userUpdateRequestedPassword = (val) => {\n    return {\n        type: \"USER_UPDATE_REQUESTEDPASSWORD\",\n        value: val\n    }\n}\n\nexport const userUpdateOrgID = (val) => {\n    return {\n        type: \"USER_UPDATE_ORGID\",\n        value: val\n    }\n}\n\n","import React from \"react\";\n\nlet hostPath = \"\";\n\nfunction BuildHostPath() {\n    \n    const host = window.location.hostname;\n    const protocol = window.location.protocol;\n\n    if(host === \"localhost\") {\n        hostPath = protocol + \"//\" + host + \":8080\";\n    } else {\n        hostPath = protocol +\"//\" + host;\n    }  \n}\n\nexport default BuildHostPath;\nexport { hostPath };","import React, { useContext, useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole, userUpdateNew, userUpdateRequestedPassword, userUpdateOrgID} from \"../../store/actions/user\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\n\nimport Button from \"react-bootstrap/Button\";\n\nfunction User() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    \n    const [details, setDetails] = useState({\n        name: '',\n        show: false\n    });\n    \n    useEffect(() => {\n        ServerPath();\n    },[])\n\n    useEffect(() => {\n        getUser();\n    }, [user]);\n\n    function getUser() {\n\n        //console.log(user);\n        if(user.auth) {\n\n            if(user.role == \"superAdmin\") {\n                setDetails({\n                    name: \"High-View Studios\",\n                    show: true\n                });\n            } else {\n                setDetails({\n                    name: user.name,\n                    show: true\n                });\n            }\n        } else {\n            setDetails({\n                name: '',\n                show: false\n            })\n        }\n    }\n\n    function logOut() {\n        Axios.get(\"/logout\")\n        .then(res => {\n            console.log(res.data.message);\n            if(res.data.message === \"User logged out\") {\n                console.log(user);\n                dispatch(userUpdateAuth(false));\n                dispatch(userUpdateName(''));\n                dispatch(userUpdateRole(''));\n                dispatch(userUpdateNew(''));\n                dispatch(userUpdateRequestedPassword(false));\n                const orgID = user.orgID;\n                dispatch(userUpdateOrgID(''));\n                history.push('/org/' + orgID + '/signIn');\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n        {/* <Button variant=\"warning\" onClick={logOut}>Log Out</Button> */}\n        {details.show ? (\n            <div>\n            <strong>User: {details.name}</strong><br />\n            {user.role == \"seniorAdmin\" ? (\n                <div>\n                <Dropdown>\n            <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                Page\n            </Dropdown.Toggle><Button variant=\"warning\" onClick={logOut}>Log Out</Button>\n\n            <Dropdown.Menu>\n                <Dropdown.Item onClick={() => history.push('/')}>Organisation Home</Dropdown.Item>\n                <Dropdown.Item onClick={() => history.push('/org/'+ user.orgID +'/organisationAdmin')}>Organisation Admin</Dropdown.Item>\n            </Dropdown.Menu>\n            </Dropdown>\n                </div>) : (\n                    <div>\n                    <Button variant=\"warning\" onClick={logOut}>Log Out</Button>\n                </div>)}\n            \n            </div>\n        ) : (\n            <div>\n            </div>\n        )}   \n        </div>\n        \n    )\n}\n\nexport default User;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport UserNav from './userNav';\n\nfunction Nav() {\n  return (\n    <nav>\n    <Row>\n    <Col></Col>\n    <Col>\n        <h1><strong>My STAFF</strong></h1>\n        <h2><strong>Space, Times, Flexible, Facilities</strong></h2>\n    </Col>\n    <Col>\n        <div className=\"user-nav\">\n          <UserNav />\n        </div>\n      </Col>\n      </Row>\n    </nav>\n  );\n}\n\nexport default Nav;","import React, { useEffect, useContext } from 'react';\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction Home() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n    onOpen();\n  },[]);\n\n  function onOpen() {\n    console.log(user);\n    if(user.auth == true) {\n      if(user.role == \"superAdmin\") {\n        history.push(\"/administrator\");\n      } else {\n        history.push('/org/' + user.orgID);\n      }\n    }\n  }\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Home</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole, userUpdateNew, userUpdateRequestedPassword, userUpdateOrgID} from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction SignIn(props) {\n\n  const organisationID = props.match.params.id;\n\n  const user = useSelector(state => state.user);\n  const organisation = useSelector(state => state.organisation);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [message, setmessage] = useState('');\n\n  useEffect(() => {\n    document.title = \"STAFF - Sign In\";\n    ServerPath();\n    //onOpen();\n  },[])\n\n  function onOpen() {\n    if(user.auth) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n      <h1>{organisation.name}</h1> <br />\n        <h3>Please Sign In!</h3>\n        {organisation.signInLocal == 'true' ? (\n          <div>\n          <form>\n          <label id=\"lblEmail\">Email:</label><br />\n          <input id=\"txtEmail\"type=\"email\"></input><br /><br />\n          <label id=\"lblPassword\">Password:</label><br />\n          <input id=\"txtPassword\" type=\"password\"></input><br /> <br />\n          <p>{message}</p>\n        </form><br />\n        \n        <Button variant=\"warning\" onClick={logIn}>Log in</Button>\n        <Button variant=\"warning\" onClick={() => history.push('/org/'+ organisationID +'/forgotPassword')}>Forgot Password</Button><br /><br />\n          </div>) : (<div></div>)}\n\n        {organisation.signInGoogle == 'true' ? (\n          <Button variant=\"danger\" href={hostPath + \"/auth/google\"}><i className=\"fab fa-google\"></i> Log in with Google</Button>\n        ) : (<div></div>)}\n        \n      </Jumbotron>\n    </Container>\n    </div>\n  );\n\n  function logIn(event) {\n    event.preventDefault();\n    const email = document.getElementById(\"txtEmail\").value;\n    const password = document.getElementById(\"txtPassword\").value;\n\n    axios.get(\"/login?email=\" + email + \"&password=\" + password)\n    .then(res => {\n      console.log(res.data);\n        const message = res.data.message;\n        if(message === \"Logged in successful\") {\n            dispatch(userUpdateAuth(true));\n            dispatch(userUpdateName(res.data.displayName));\n            dispatch(userUpdateRole(res.data.role));\n            dispatch(userUpdateNew(res.data.new));\n            dispatch(userUpdateRequestedPassword(res.data.requestedPassword));\n            dispatch(userUpdateOrgID(res.data.orgID));\n\n            if(res.data.new == \"true\") {\n              history.push('createPassword');\n            } else {\n            history.push('/org/' + organisationID);\n            }\n        } else {\n            setmessage(res.data.info);\n        }\n    })\n    .catch(err => {\n        console.log(err);\n    });\n  }\n\n  function register() {\n    history.push(\"/register\");\n  }\n}\n\nexport default SignIn;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userUpdateNew } from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction CreatePassword(props) {\n\n  const organisationID = props.match.params.id;\n\n  const history = useHistory();\n  const [message, setmessage] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[]);\n\n  function setPassword(event) {\n    event.preventDefault();\n\n    const oldPassword = document.getElementById('txtCurrentPassword').value;\n    const newPassword = document.getElementById('txtNewPassword').value;\n    const confirmPassword = document.getElementById('txtConfirmPassword').value;\n\n    if(oldPassword != '' && newPassword != '' && confirmPassword != '')\n    {\n      const url = '/createPassword/' + oldPassword + '/' + newPassword + '/' + confirmPassword;\n\n      axios.get(url)\n      .then(res => {\n        if(res.data.userError == 'Yes') {\n          setmessage(res.data.message);\n        } else {\n          if(res.data.message == 'Updated user first password') {\n            dispatch(userUpdateNew(res.data.user.new));\n            history.push(\"/org/\" + organisationID);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n}\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h1>Hello, and welcome to My STAFF</h1>\n        <h3>Please create a new password</h3>\n        <form>\n          <label id=\"lblCurrentPassword\">Current Password:</label><br />\n          <input id=\"txtCurrentPassword\" type=\"password\" required /><br /><br />\n          <label id=\"lblNewPassword\">New Password:</label><br />\n          <input id=\"txtNewPassword\" type=\"password\" required /><br /> <br />\n          <label id=\"lblConfirmPassword\">Confirm Password:</label><br />\n          <input id=\"txtConfirmPassword\" type=\"password\" required /><br /> <br />\n          <p>{message}</p>\n          <Button type='submit' variant=\"warning\" onClick={setPassword}>Set Password</Button><br /><br />\n        </form><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default CreatePassword;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userUpdateNew } from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { Form } from 'react-bootstrap';\n\nfunction ForgotPassword(props) {\n\n  const organisationID = props.match.params.id;\n\n  const history = useHistory();\n  const [message, setmessage] = useState('');\n  const [sent, setSent] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[]);\n\n  function requestPassword(event) {\n    event.preventDefault();\n\n    const email = document.getElementById('txtEmail').value;\n\n    if(email != '')\n    {\n      const url = '/requestPassword/' + email \n\n      axios.get(url)\n      .then(res => {\n        if(res.data.userError == \"Yes\") {\n          setmessage(res.data.message);\n        } else {\n          setSent(true);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n}\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h1>Forgot your password?</h1>\n        {sent ? (\n          <div>\n          <h3>Your new password has been requested, please check your email</h3>\n          <Button variant=\"warning\" onClick={() => history.push('/org/' + organisationID + '/signIn')}>Back to Sign In</Button><br /><br />\n          </div>\n        ) : (\n          <div>\n            <h3>Please enter your email below:</h3><br/>\n            <form>\n              <Form.Control id=\"txtEmail\" type=\"email\" required /><br /> <br />\n              <p>{message}</p>\n              <Button type='submit' variant=\"warning\" onClick={requestPassword}>Request New Password</Button><br /><br />\n            </form><br />\n          </div>\n            )}\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userUpdateRequestedPassword } from '../store/actions/user';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction ChangePassword(props) {\n\n  const organisationID = props.match.params.id;\n\n  const history = useHistory();\n  const [message, setmessage] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[]);\n\n  function setPassword(event) {\n    event.preventDefault();\n\n    const oldPassword = document.getElementById('txtCurrentPassword').value;\n    const newPassword = document.getElementById('txtNewPassword').value;\n    const confirmPassword = document.getElementById('txtConfirmPassword').value;\n\n    if(oldPassword != '' && newPassword != '' && confirmPassword != '')\n    {\n      const url = '/changePassword/' + oldPassword + '/' + newPassword + '/' + confirmPassword;\n\n      axios.get(url)\n      .then(res => {\n        if(res.data.userError == 'Yes') {\n          setmessage(res.data.message);\n        } else {\n          if(res.data.message == 'Updated user password') {\n            dispatch(userUpdateRequestedPassword(res.data.user.requestedPassword));\n            history.push(\"/org/\" + organisationID);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n}\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h1>Please create a new password</h1>\n        <form>\n          <label id=\"lblCurrentPassword\">Current Password:</label><br />\n          <input id=\"txtCurrentPassword\" type=\"password\" required /><br /><br />\n          <label id=\"lblNewPassword\">New Password:</label><br />\n          <input id=\"txtNewPassword\" type=\"password\" required /><br /> <br />\n          <label id=\"lblConfirmPassword\">Confirm Password:</label><br />\n          <input id=\"txtConfirmPassword\" type=\"password\" required /><br /> <br />\n          <p>{message}</p>\n          <Button type='submit' variant=\"warning\" onClick={setPassword}>Set Password</Button><br /><br />\n        </form><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default ChangePassword;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { useSelector} from 'react-redux';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction WrongOrganisation(props) {\n\n  const organisationID = props.match.params.id;\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Not Connected\";\n  },[])\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>Sorry, this is not your organisation</h3><br /> <br />\n        <Button variant=\"warning\" onClick={() => history.push('/org/' + organisationID)}>Back to my organisation</Button><br /><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default WrongOrganisation;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { useSelector} from 'react-redux';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction NotConnected() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Not Connected\";\n    ServerPath();\n    onOpen();\n  },[])\n\n  function onOpen() {\n    if(user.auth) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>Email is not connected to any organisation</h3>\n        <Button variant=\"warning\" onClick={() => history.push('/')}>Back to Home</Button><br /><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default NotConnected;\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { useSelector} from 'react-redux';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction WrongLogin(props) {\n\n  const organisationID = props.match.params.id;\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Not Connected\";\n    ServerPath();\n  },[])\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>This is not the login method you use to log in</h3>\n        <Button variant=\"warning\" onClick={() => history.push('/org/'+ organisationID +'/')}>Back</Button><br /><br />\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n}\n\nexport default WrongLogin;\n","import React, { useEffect, useContext } from 'react';\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction OrganisationAdmin() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Organisation Admin</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default OrganisationAdmin;","import React, { useEffect, useContext, useState } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { orgUpdateName, orgUpdateSignInLocal, orgUpdateSignInGoogle } from \"../store/actions/organistion\";\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction OrganisationHome(props) {\n  \n  const organisationId = props.match.params.id;\n\n  const user = useSelector(state => state.user);\n  const [orgTitle, setOrgTitle] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n    getOrgisation();\n  },[]);\n\n  function getOrgisation() {\n\n    const url = '/organisation/' + organisationId;\n    Axios.get(url)\n    .then(res => {\n      if(res.data.userError != \"Yes\") {\n\n        dispatch(orgUpdateName(res.data.organisation.name));\n        dispatch(orgUpdateSignInLocal(res.data.organisation.auth_Local));\n        dispatch(orgUpdateSignInGoogle(res.data.organisation.auth_Google));\n        \n        if(user.auth == false) {\n          history.push('/org/' + organisationId + '/signIn');\n        } else {\n          if(user.orgID != organisationId) {\n            history.push('/org/'+ user.orgID +'/wrongOrganisation');\n          } else if (user.requestedPassword == 'true') {\n            history.push('/org/'+ organisationId +'/changePassword');\n          } else if(user.new == 'true') {\n            history.push('/org/' + organisationId +'/createPassword');\n          } else {\n            console.log(res.data.organisation);\n            setOrgTitle(res.data.organisation.name);\n          }\n        }\n      } else {\n        history.push('/');\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Organisation Home</h1>\n              <h3>{orgTitle}</h3>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default OrganisationHome;","export const orgUpdateName = (val) => {\n    return {\n        type: \"ORG_UPDATE_NAME\",\n        value: val\n    };\n}\n\nexport const orgUpdateSignInLocal = (val) => {\n    return {\n        type: \"ORG_UPDATE_SIGNIN_LOCAL\",\n        value: val\n    };\n}\n\nexport const orgUpdateSignInGoogle = (val) => {\n    return {\n        type: \"ORG_UPDATE_SIGNIN_GOOGLE\",\n        value: val\n    };\n}","import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport { Row, Col } from 'react-bootstrap';\n\nfunction OrganisationItem(props) {\n    return (\n        <div>\n            <Card body className='Organisations-ListBox'>\n            <Row>\n                <Col>\n                    <label>{props.name}</label>\n                </Col>\n                <Col>\n                    <label>{props.email}</label>\n                </Col>\n                <Col>\n                    <label>{props.poc}</label>\n                </Col>\n                <Col>\n                    <label>{props.id}</label>\n                </Col>\n            </Row>\n            </Card>\n        </div>\n    )\n}\n\nexport default OrganisationItem;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport OrganisationItem from './organisationItem';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { Row, Col } from 'react-bootstrap';\n\nfunction OrganisationList() {\n\n    \n    const history = useHistory();\n    const [loaded, setLoaded] = useState(false);\n    const [organisations, setOrganisations] = useState([]);\n\n    useEffect(() => {\n        onOpen();\n    }, []);\n    \n    function onOpen() {\n\n        Axios.get('/organisation/all')\n        .then(res => {\n            setOrganisations(res.data);\n            setLoaded(true);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n   return (\n        <div>\n            <div className=\"AH-AddOrganisationBtn\">\n                <Button variant=\"warning\" onClick={() => history.push(\"/administrator/organisationRegister\")}>Add Organisation</Button>\n            </div>\n            <br />\n            {loaded ? (\n                <div><Card body className='Organisations-ListTitles'>\n            <Row>\n                <Col>\n                    <label>Name</label>\n                </Col>\n                <Col>\n                    <label>Email</label>\n                </Col>\n                <Col>\n                    <label>Point of Contact</label>\n                </Col>\n                <Col>\n                    <label>Unquie URL</label>\n                </Col>\n            </Row>\n            </Card>\n            <br />\n            {organisations.map((organisation, index) => {\n               return (\n                   <div key={index}>\n                        <OrganisationItem name={organisation.name} email={organisation.POC_Email} poc={organisation.POC_Name} id={organisation.url} />\n                        <br />\n                    </div>)\n            })}\n            </div>) : (<div></div>)}\n            \n        \n        </div>\n   )\n}\n\nexport default OrganisationList;","import React, { useEffect} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\n//COMPONENTS\nimport OrganisationList from '../../components/pages/administrator/organisationList';\n\nfunction Home() {\n\n  const history = useHistory();\n    const user = useSelector(state => state.user);\n\n    if(!user.auth || user.role != \"superAdmin\") {\n            history.push('/administrator/signIn');\n    }\n\n  useEffect(() => {\n    document.title = \"STAFF - Administrator\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n      <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <OrganisationList />\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignIn() {\n\n    const [granted, setGranted] = useState(true);\n    const user = useSelector(state => state.user);\n    const history = useHistory();\n\n    useEffect(() => {\n        ServerPath();\n        onOpen();\n    },[])\n\n    function onOpen() {\n        if(user.auth) {\n            if(user.role == \"superAdmin\") {\n                history.push('/');\n            } else {\n                setGranted(false);\n            }\n        }\n    }\n\n    return (\n        <div className=\"body\">\n            <Container className=\"p-3\">\n                <Jumbotron className=\"back-color\">\n                    <h1>Administrator Sign In</h1>\n                    {!granted ? (\n                    <div>\n                    <h1>Access Denied</h1>\n                    </div>\n                    ):(\n                    <div>\n                    <br />\n                    <Button variant=\"dark\" href={hostPath + \"/auth/github\"}><i class=\"fab fa-github\"></i>  Log in with Github</Button><br /><br />\n                    </div> \n                    \n                    )}\n                </Jumbotron>\n            </Container>\n        </div>\n    )\n}\n\nexport default SignIn;","import React, { useEffect, useState} from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\"\n\n//COMPONENTS\nimport OrganisationList from '../../components/pages/administrator/organisationList';\nimport { Col } from 'react-bootstrap';\n\nfunction OrganisationRegister() {\n\n  const [message, setMessage] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF - Administrator\";\n  },[]);\n\n  function handleClick(event) {\n    event.preventDefault();\n\n    const orgName = document.getElementById(\"txtOrgName\").value;\n    const AllocatRooms = document.getElementById(\"txtAlRooms\").value;\n    const authLocal = document.getElementById(\"ckbLocal\").checked;\n    const authGoggle = document.getElementById(\"ckbGoggle\").checked;\n    const pName = document.getElementById(\"txtName\").value;\n    const pEmail = document.getElementById(\"txtEmail\").value;\n\n    const url = \"/administrator/addOrganisation/\"+orgName+\"/\"+AllocatRooms+\"/\"+authLocal+\"/\"+authGoggle+\"/\"+pName+\"/\"+pEmail;\n\n    Axios.get(url)\n    .then(res => {\n      const data = res.data;\n\n      if(data.error != \"null\") {\n        console.log(data.message);\n      } else if(data.userError == \"Yes\") {\n          setMessage(data.message);\n      } else if (data.message == \"Successfully added\") {\n        history.push(\"/administrator\");\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    })\n\n  }\n\n  return (\n    <div className=\"body\">\n      <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n                <h1>Organisation Register</h1>\n\n                <Form className=\"A-AddOrganisationText\">\n                <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblOrgName\">Organisation Name:</Form.Label><br />\n                  <Form.Control id=\"txtOrgName\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblAlRooms\">Allocated Rooms:</Form.Label><br />\n                  <Form.Control id=\"txtAlRooms\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                  </Form.Row>\n                  <Form.Label id=\"lblAuthTypes\">Types of Authencation:</Form.Label><br />\n                  <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Check id=\"ckbLocal\" type=\"checkbox\" label=\"Local Login\" />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Check id=\"ckbGoggle\" type=\"checkbox\" label=\"Google Login\" />\n                </Form.Group>\n                  </Form.Row>\n                  <Form.Label className=\"A-AddOrganisationTextColor\" id=\"lblPOC\">Point of Contact (Senior Admin):</Form.Label><br />\n                  <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblName\">Name:</Form.Label><br />\n                  <Form.Control id=\"txtName\" type=\"text\" required />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblEmail\">Email:</Form.Label><br />\n                  <Form.Control id=\"txtEmail\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                  </Form.Row>\n                  <p>{message}</p>\n                  <Button type=\"submit\" onClick={handleClick} variant=\"warning\">Register</Button>\n                </Form>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default OrganisationRegister;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport {useDispatch} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole, userUpdateNew, userUpdateRequestedPassword, userUpdateOrgID} from './store/actions/user'\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport \"./public/styles.css\";\n\nimport Nav from \"./components/NavBar/Nav\";\n\nimport Home from \"./pages/home\";\nimport SignIn from \"./pages/signIn\";\nimport CreatePassword from \"./pages/createPassword\";\nimport ForgotPassword from \"./pages/forgotPassword\";\nimport ChangePassword from './pages/changePassword';\nimport WrongOrganisation from './pages/wrongOrganisation';\n\nimport NotConnected from \"./pages/notConnected\";\nimport WrongLogin from \"./pages/wrongLogin\";\nimport OrganisationAdmin from \"./pages/organisationAdmin\";\nimport OrganisationHome from \"./pages/organisationHome\";\n\nimport AdminHome from \"./pages/administrator/home\";\nimport AdminSignIn from \"./pages/administrator/signIn\";\nimport AdminOrgRegister from \"./pages/administrator/registerOrganisation\";\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const [isLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    onOpen();\n  },[])\n\n  function onOpen() {\n    Axios.get(\"/auth\", {withCredentials: true })\n  .then(res => {\n\n      //console.log(res.data);\n      const isAuth = res.data.auth;\n      console.log(res.data)\n      dispatch(userUpdateAuth(isAuth));\n      if(isAuth) {\n        if(res.data.role == \"superAdmin\") {\n          dispatch(userUpdateName(\"High-ViewStudios\"));\n          dispatch(userUpdateRole(\"superAdmin\"));\n        } else {\n          dispatch(userUpdateName(res.data.user.displayName));\n          dispatch(userUpdateRole(res.data.user.role));\n          dispatch(userUpdateNew(res.data.user.new));\n          dispatch(userUpdateRequestedPassword(res.data.user.requestedPassword));\n          dispatch(userUpdateOrgID(res.data.user.orgID));\n        }\n      }\n      setLoaded(true);\n  })\n  .catch(err => {\n      console.log(\"Authe\" +err);\n  })\n  }\n\n  return (\n    <div>\n    {isLoaded ? (   \n    <Router>\n      <div className=\"App\" >\n        <Nav />\n        <Switch>\n        {/* USER */}\n        <Route path=\"/\" exact component={Home} /> {/* DO NOT TOUCH */}\n        <Route path=\"/org/:id\" exact component={OrganisationHome} />\n        <Route path=\"/org/:id/signIn\" component={SignIn} /> {/* DO NOT TOUCH */}\n        <Route path=\"/org/:id/forgotPassword\" component={ForgotPassword} />\n        <Route path=\"/org/:id/changePassword\" component={ChangePassword} />\n        <Route path=\"/org/:id/createPassword\" component={CreatePassword} />\n        <Route path='/org/:id/wrongOrganisation' component={WrongOrganisation} />\n        <Route path=\"/org/:id/wrongLogin/\" component={WrongLogin} />\n        <Route path=\"/org/:id/organisationAdmin\" component={OrganisationAdmin} />\n\n        <Route path=\"/notConnected\" component={NotConnected} />\n        \n\n        {/* ADMINISTRATION */}\n        <Route path=\"/administrator\" exact component={AdminHome} /> {/* DO NOT TOUCH */}\n        <Route path=\"/administrator/signIn\" component={AdminSignIn} /> {/* DO NOT TOUCH */}\n        <Route path=\"/administrator/organisationRegister\" component={AdminOrgRegister} />\n        </Switch>\n      </div>\n    </Router>) : <div></div>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const userDetails = (state = {auth: false, name: '', email: '', role:'', new:'', requestedPassword: false, orgID: ''}, action) => {\n    switch(action.type){\n        case 'USER_UPDATE_AUTH':\n            return {...state, auth: action.value};\n        case 'USER_UPDATE_NAME':\n            return {...state, name: action.value};\n        case 'USER_UPDATE_EMAIL':\n            return {...state, email: action.value};\n        case 'USER_UPDATE_ROLE':\n            return {...state, role: action.value};\n        case 'USER_UPDATE_NEW':\n            return {...state, new: action.value};\n        case 'USER_UPDATE_REQUESTEDPASSWORD':\n            return {...state, requestedPassword: action.value}\n        case 'USER_UPDATE_ORGID':\n            return {...state, orgID: action.value}\n        default:\n            return state\n    }\n}\n\nexport default userDetails;","const organisationDetails = (state = {name: '', signInLocal: false, signInGoogle: false}, action) => {\n    switch(action.type){\n        case 'ORG_UPDATE_NAME':\n            return {...state, name: action.value};\n        case 'ORG_UPDATE_SIGNIN_LOCAL':\n            return {...state, signInLocal: action.value};\n        case 'ORG_UPDATE_SIGNIN_GOOGLE':\n            return {...state, signInGoogle: action.value};\n        default:\n            return state\n    }\n}\n\nexport default organisationDetails;","import userDetails from './userDetails';\nimport organisationDetails from './organisationDetails';\nimport {combineReducers} from 'redux'\n\nconst rootReducer = combineReducers({\n    user: userDetails,\n    organisation: organisationDetails\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers';\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}