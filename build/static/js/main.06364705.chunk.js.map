{"version":3,"sources":["store/actions/index.js","ServerPath.jsx","components/NavBar/userNav.js","components/NavBar/Nav.js","pages/home.js","pages/signIn.js","pages/register.jsx","pages/administrator/home.js","pages/administrator/signin.jsx","pages/administrator/registerOrganisation.js","App.js","serviceWorker.js","store/reducers/userDetails.js","store/reducers/index.js","index.js"],"names":["userUpdateAuth","val","type","value","userUpdateName","userUpdateRole","hostPath","BuildHostPath","host","window","location","hostname","protocol","User","history","useHistory","user","useSelector","state","dispatch","useDispatch","useState","name","show","details","setDetails","useEffect","ServerPath","console","log","auth","role","Button","variant","onClick","Axios","get","then","res","data","message","push","catch","err","Nav","Row","Col","className","Home","document","title","Container","fluid","Jumbotron","SignIn","setmessage","id","event","preventDefault","email","getElementById","password","axios","displayName","info","href","Register","setMessage","registed","setRegister","size","required","url","userError","granted","setGranted","class","OrganisationRegister","App","isLoaded","setLoaded","withCredentials","isAuth","path","exact","component","AdminHome","AdminSignIn","AdminOrgRegister","Boolean","match","userDetails","action","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.06364705.chunk.js","sourcesContent":["export const userUpdateAuth = (val) => {\n    return {\n        type: \"USER_UPDATE_AUTH\",\n        value: val\n    };\n}\n\nexport const userUpdateName = (val) => {\n    return {\n        type: \"USER_UPDATE_NAME\",\n        value: val\n    };\n}\n\nexport const userUpdateEmail = (val) => {\n    return {\n        type: \"USER_UPDATE_EMAIL\",\n        value: val\n    };\n}\n\nexport const userUpdateRole = (val) => {\n    return {\n        type: \"USER_UPDATE_ROLE\",\n        value: val\n    };\n}\n\n","import React from \"react\";\n\nlet hostPath = \"\";\n\nfunction BuildHostPath() {\n    \n    const host = window.location.hostname;\n    const protocol = window.location.protocol;\n\n    if(host === \"localhost\") {\n        hostPath = protocol + \"//\" + host + \":8080\";\n    } else {\n        hostPath = protocol +\"//\" + host;\n    }  \n}\n\nexport default BuildHostPath;\nexport { hostPath };","import React, { useContext, useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole} from \"../../store/actions\"\n\n\nimport Button from \"react-bootstrap/Button\";\n\nfunction User() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    \n    const [details, setDetails] = useState({\n        name: '',\n        show: false\n    });\n    \n    useEffect(() => {\n        ServerPath();\n    },[])\n\n    useEffect(() => {\n        getUser();\n    }, [user]);\n\n    function getUser() {\n\n        console.log(user);\n        if(user.auth) {\n\n            if(user.role == \"superAdmin\") {\n                setDetails({\n                    name: \"High-View Studios\",\n                    show: true\n                });\n            } else {\n                setDetails({\n                    name: user.name,\n                    show: true\n                });\n            }\n        } else {\n            setDetails({\n                name: '',\n                show: false\n            })\n        }\n    }\n\n    function logOut() {\n        Axios.get(\"/logout\")\n        .then(res => {\n            console.log(res.data.message);\n            if(res.data.message === \"User logged out\") {\n                dispatch(userUpdateAuth(false));\n                dispatch(userUpdateName(''));\n                dispatch(userUpdateRole(''));\n                history.push('/signin');\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n        {/* <Button variant=\"warning\" onClick={logOut}>Log Out</Button> */}\n        {details.show ? (\n            <div>\n            <strong>User: {details.name}</strong><br />\n            <Button variant=\"warning\" onClick={logOut}>Log Out</Button>\n            </div>\n        ) : (\n            <div>\n            </div>\n        )}   \n        </div>\n        \n    )\n}\n\nexport default User;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport UserNav from './userNav';\n\nfunction Nav() {\n  return (\n    <nav>\n    <Row>\n    <Col></Col>\n    <Col>\n        <h1><strong>My STAFF</strong></h1>\n        <h2><strong>Space, Times, Flexible, Facilities</strong></h2>\n    </Col>\n    <Col>\n        <div className=\"user-nav\">\n          <UserNav />\n        </div>\n      </Col>\n      </Row>\n    </nav>\n  );\n}\n\nexport default Nav;","import React, { useEffect, useContext } from 'react';\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction Home() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n    onOpen();\n  },[]);\n\n  function onOpen() {\n    if(user.auth == false) {\n      history.push(\"/signin\");\n    } else if(user.role == \"superAdmin\") {\n      history.push(\"/administrator\");\n    }\n  }\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Home</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole} from '../store/actions';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction SignIn() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [message, setmessage] = useState('');\n\n  useEffect(() => {\n    document.title = \"STAFF - Sign In\";\n    ServerPath();\n    onOpen();\n  },[])\n\n  function onOpen() {\n    if(user.auth) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>Please Sign In!</h3>\n        <form>\n          <label id=\"lblEmail\">Email:</label><br />\n          <input id=\"txtEmail\"type=\"email\"></input><br /><br />\n          <label id=\"lblPassword\">Password:</label><br />\n          <input id=\"txtPassword\" type=\"password\"></input>\n          <p>{message}</p>\n        </form><br />\n        \n        <Button variant=\"warning\" onClick={logIn}>Log in</Button>\n        <Button variant=\"warning\" onClick={register}>Register</Button><br /><br />\n        <Button variant=\"danger\" href={hostPath + \"/auth/google\"}><i className=\"fab fa-google\"></i> Log in with Google</Button>\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n\n  function logIn(event) {\n    event.preventDefault();\n    const email = document.getElementById(\"txtEmail\").value;\n    const password = document.getElementById(\"txtPassword\").value;\n\n    axios.get(\"/login?email=\" + email + \"&password=\" + password)\n    .then(res => {\n        const message = res.data.message;\n        if(message === \"Logged in successful\") {\n            dispatch(userUpdateAuth(true));\n            dispatch(userUpdateName(res.data.displayName));\n            dispatch(userUpdateRole(res.data.role));\n            history.push('/');\n        } else {\n            setmessage(res.data.info);\n        }\n    })\n    .catch(err => {\n        console.log(err);\n    });\n  }\n\n  function register() {\n    history.push(\"/register\");\n  }\n}\n\nexport default SignIn;\n","import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Register() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n\n    const [message, setMessage] = useState('');\n    const [registed, setRegister] = useState(false);\n\n    useEffect(() => {\n        document.title = \"STAFF - Register\";\n        onOpen();\n    },[]);\n\n    function onOpen() {\n        if(user.auth) {\n            history.push('/');\n        }\n    }\n\n    function handleClick(event) {\n        event.preventDefault();\n        setMessage('');\n        const name = document.getElementById(\"name\").value;\n        const email = document.getElementById(\"email\").value;\n        const password = document.getElementById(\"password\").value;\n        const confirmpassword = document.getElementById(\"confirmpassword\").value;\n        \n        const url = \"/register/\"+ name +\"/\"+ email +\"/\"+ password +\"/\"+ confirmpassword;\n        axios.get(url)\n        .then(res => {\n            if(res.data.message === \"User registered successfully\") {\n                setRegister(true);\n            } else {\n                if(res.data.userError === \"Yes\") {\n                    setMessage(res.data.message);\n                }\n        }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    function handleLogin() {\n        setRegister(false);\n        history.push('/signin')\n    }\n\n    \n    return (\n        <div className=\"body\">\n        <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n            <div className=\"header\">\n                <h2>Register</h2>\n                {registed ? (\n                    <div>\n                    <h3> You have successfully been registered</h3><br />\n                    <p>Please log in</p>\n                    <Button type=\"submit\" onClick={handleLogin} variant=\"warning\">Login</Button>\n                    </div>\n                ) : (\n                    <form>\n                    <label id=\"lblName\">Name:</label><br />\n                    <input id=\"name\" size=\"sm\" type=\"text\" required/><br />\n                    <br />\n                    <label id=\"lblEmail\">Email:</label><br />\n                    <input id=\"email\" size=\"sm\" type=\"email\" required/><br />\n                    <br />\n                    <label id=\"lblPassword\">Password:</label><br />\n                    <input id=\"password\" size=\"sm\" type=\"password\" required/><br />\n                    <br />\n                    <label id=\"lblConPassword\">Confirm Password:</label><br />\n                    <input id=\"confirmpassword\" size=\"sm\" type=\"password\" required /><br />\n                    <br />\n                    <p>{message}</p>\n                    <Button type=\"submit\" onClick={handleClick} variant=\"warning\">Register</Button>\n                    </form> \n                )}\n            </div>\n            </Jumbotron>\n        </Container>\n        </div>\n    )\n}\n\nexport default Register;","import React, { useEffect} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\n//COMPONENTS\nimport OrganisationList from '../../components/pages/administrator/organisationList';\n\nfunction Home() {\n\n  const history = useHistory();\n    const user = useSelector(state => state.user);\n\n    if(!user.auth || user.role != \"superAdmin\") {\n            history.push('/administrator/signin');\n    }\n\n  useEffect(() => {\n    document.title = \"STAFF - Administrator\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n      <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n            <h1>Administrator Home</h1>\n              {/* <OrganisationList /> */}\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SignIn() {\n\n    const [granted, setGranted] = useState(true);\n    const user = useSelector(state => state.user);\n    const history = useHistory();\n\n    useEffect(() => {\n        ServerPath();\n        onOpen();\n    },[])\n\n    function onOpen() {\n        if(user.auth) {\n            if(user.role == \"superAdmin\") {\n                history.push('/');\n            } else {\n                setGranted(false);\n            }\n        }\n    }\n\n    return (\n        <div className=\"body\">\n            <Container className=\"p-3\">\n                <Jumbotron className=\"back-color\">\n                    <h1>Administrator Sign In</h1>\n                    {!granted ? (\n                    <div>\n                    <h1>Access Denied</h1>\n                    </div>\n                    ):(\n                    <div>\n                    <br />\n                    <Button variant=\"dark\" href={hostPath + \"/auth/github\"}><i class=\"fab fa-github\"></i>  Log in with Github</Button><br /><br />\n                    </div> \n                    \n                    )}\n                </Jumbotron>\n            </Container>\n        </div>\n    )\n}\n\nexport default SignIn;","import React, { useEffect} from 'react';\n\n//Styles\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n//COMPONENTS\nimport OrganisationList from '../../components/pages/administrator/organisationList';\n\nfunction OrganisationRegister() {\n\n  useEffect(() => {\n    document.title = \"STAFF - Administrator\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n      <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n                <h1>Organisation Register</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default OrganisationRegister;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport {useDispatch} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole} from './store/actions'\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport \"./public/styles.css\";\n\nimport Nav from \"./components/NavBar/Nav\";\n\nimport Home from \"./pages/home\";\nimport SignIn from \"./pages/signIn\";\nimport Register from \"./pages/register\";\nimport UserTest from \"./pages/userTest\"\n\nimport AdminHome from \"./pages/administrator/home\";\nimport AdminSignIn from \"./pages/administrator/signin\";\nimport AdminOrgRegister from \"./pages/administrator/registerOrganisation\";\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const [isLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    onOpen();\n  },[])\n\n  function onOpen() {\n    Axios.get(\"/auth\", {withCredentials: true })\n  .then(res => {\n\n      console.log(res.data);\n      const isAuth = res.data.auth;\n      dispatch(userUpdateAuth(isAuth));\n      if(isAuth) {\n        if(res.data.role == \"superAdmin\") {\n          dispatch(userUpdateName(\"High-ViewStudios\"));\n        } else {\n          dispatch(userUpdateName(res.data.user.displayName));\n        }\n        dispatch(userUpdateRole(res.data.role))\n      }\n      setLoaded(true);\n  })\n  .catch(err => {\n      console.log(\"Auth \" +err);\n  })\n  }\n\n  return (\n    <div>\n    {isLoaded ? (   \n    <Router>\n      <div className=\"App\" >\n        <Nav />\n        <Switch>\n        {/* USER */}\n        <Route path=\"/\" exact component={Home} /> {/* DO NOT TOUCH */}\n        <Route path=\"/signin\" component={SignIn} /> {/* DO NOT TOUCH */}\n        <Route path=\"/register\" component={Register} />\n\n        {/* ADMINISTRATION */}\n        <Route path=\"/administrator\" exact component={AdminHome} /> {/* DO NOT TOUCH */}\n        <Route path=\"/administrator/signin\" component={AdminSignIn} /> {/* DO NOT TOUCH */}\n        <Route path=\"/administrator/organisationRegister\" component={AdminOrgRegister} />\n        </Switch>\n      </div>\n    </Router>) : <div></div>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const userDetails = (state = {auth: false, name: '', email: '', role:''}, action) => {\n    switch(action.type){\n        case 'USER_UPDATE_AUTH':\n            return {...state, auth: action.value};\n        case 'USER_UPDATE_NAME':\n            return {...state, name: action.value};\n        case 'USER_UPDATE_EMAIL':\n            return {...state, email: action.value};\n        case 'USER_UPDATE_ROLE':\n            return {...state, role: action.value};\n        default:\n            return state\n    }\n}\n\nexport default userDetails;","import userDetails from './userDetails';\nimport {combineReducers} from 'redux'\n\nconst rootReducer = combineReducers({\n    user: userDetails,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers';\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}